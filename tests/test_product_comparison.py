#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º scoring.
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import duckdb
from utils.product_comparison import compare_ozon_products
from utils.scoring_config_optimized import ScoringConfig
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_product_comparison():
    """–¢–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–≤—É—Ö —Ç–æ–≤–∞—Ä–æ–≤"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = "data/marketplace_data.db"
    if not os.path.exists(db_path):
        logger.error(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return
    
    conn = duckdb.connect(db_path)
    
    try:
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
        source_product = "0562002434-—á–µ—Ä–Ω—ã–π-34"  # –¢–æ–≤–∞—Ä —Å –∫–æ–ª–æ–¥–∫–æ–π G0562000198
        candidate_product = "0562002434-—á–µ—Ä–Ω—ã–π-35"  # –¢–æ—Ç –∂–µ —Ç–æ–≤–∞—Ä, –Ω–æ –¥—Ä—É–≥–æ–π —Ä–∞–∑–º–µ—Ä
        
        logger.info(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤:")
        logger.info(f"   –ò—Å—Ö–æ–¥–Ω—ã–π: {source_product}")
        logger.info(f"   –ö–∞–Ω–¥–∏–¥–∞—Ç: {candidate_product}")
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
        result = compare_ozon_products(
            db_conn=conn,
            source_vendor_code=source_product,
            candidate_vendor_code=candidate_product,
            config=ScoringConfig(),
            print_report=True
        )
        
        if result:
            logger.info(f"‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            logger.info(f"   Score: {result.total_score:.1f}")
            logger.info(f"   –°—Ö–æ–∂–µ—Å—Ç—å: {result.similarity_percentage:.1f}%")
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å —Ç–æ–≤–∞—Ä–∞–º–∏ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
        print(f"\n" + "="*80)
        print("–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –¢–ï–°–¢: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –∫–æ–ª–æ–¥–∫–æ–π")
        print("="*80)
        
        # –ù–∞–π–¥–µ–º —Ç–æ–≤–∞—Ä —Å —Ç–∞–∫–æ–π –∂–µ –∫–æ–ª–æ–¥–∫–æ–π, –Ω–æ –¥—Ä—É–≥–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
        same_last_query = """
        SELECT DISTINCT ocp.oz_vendor_code
        FROM oz_category_products ocp
        LEFT JOIN oz_products op ON ocp.oz_vendor_code = op.oz_vendor_code
        LEFT JOIN punta_table pt ON op.oz_sku = pt.wb_sku
        WHERE pt.mega_last = 'G0562000198'
        AND ocp.oz_vendor_code != ?
        AND ocp.type = '–¢—É—Ñ–ª–∏'
        AND ocp.gender = '–î–µ–≤–æ—á–∫–∏'
        AND ocp.oz_brand = 'Shuzzi'
        LIMIT 3
        """
        
        same_last_products = conn.execute(same_last_query, [source_product]).fetchall()
        
        if same_last_products:
            for i, (candidate_code,) in enumerate(same_last_products, 1):
                print(f"\n--- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ {i}: {source_product} vs {candidate_code} ---")
                
                result = compare_ozon_products(
                    db_conn=conn,
                    source_vendor_code=source_product,
                    candidate_vendor_code=candidate_code,
                    config=ScoringConfig(),
                    print_report=True
                )
                
                if result:
                    print(f"Score: {result.total_score:.1f}, –°—Ö–æ–∂–µ—Å—Ç—å: {result.similarity_percentage:.1f}%")
        else:
            logger.warning("–ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã —Å —Ç–∞–∫–æ–π –∂–µ –∫–æ–ª–æ–¥–∫–æ–π –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞")
    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        conn.close()
    
    logger.info("\nüèÅ –¢–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    test_product_comparison()

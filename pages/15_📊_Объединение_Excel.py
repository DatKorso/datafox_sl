import streamlit as st
import pandas as pd
import os
from io import BytesIO
import traceback
from openpyxl import load_workbook, Workbook
from openpyxl.utils.dataframe import dataframe_to_rows
import tempfile
from utils.config_utils import load_config, get_data_filter

st.set_page_config(
    page_title="–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ Excel",
    page_icon="üìä",
    layout="wide"
)

st.title("üìä –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ Excel —Ñ–∞–π–ª–æ–≤")
st.markdown("–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö Excel —Ñ–∞–π–ª–æ–≤ –≤ –æ–¥–∏–Ω —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
if 'template_file' not in st.session_state:
    st.session_state.template_file = None
if 'additional_files' not in st.session_state:
    st.session_state.additional_files = []
if 'sheet_config' not in st.session_state:
    st.session_state.sheet_config = {}
if 'available_sheets' not in st.session_state:
    st.session_state.available_sheets = []
if 'brand_filter_enabled' not in st.session_state:
    st.session_state.brand_filter_enabled = False
if 'brand_filter_value' not in st.session_state:
    st.session_state.brand_filter_value = ""

def get_excel_sheets(file_bytes):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤ –∏–∑ Excel —Ñ–∞–π–ª–∞"""
    try:
        with tempfile.NamedTemporaryFile(suffix='.xlsx', delete=False) as tmp_file:
            tmp_file.write(file_bytes)
            tmp_file.flush()
            
            wb = load_workbook(tmp_file.name, read_only=True)
            sheets = wb.sheetnames
            wb.close()
            os.unlink(tmp_file.name)
            return sheets
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {str(e)}")
        return []

def read_excel_sheet(file_bytes, sheet_name, start_row=0):
    """–ü—Ä–æ—á–∏—Ç–∞—Ç—å –ª–∏—Å—Ç Excel –Ω–∞—á–∏–Ω–∞—è —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"""
    try:
        with tempfile.NamedTemporaryFile(suffix='.xlsx', delete=False) as tmp_file:
            tmp_file.write(file_bytes)
            tmp_file.flush()
            
            df = pd.read_excel(tmp_file.name, sheet_name=sheet_name, header=None)
            os.unlink(tmp_file.name)
            
            if start_row > 0:
                df = df.iloc[start_row:]
            
            return df
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–∏—Å—Ç–∞ {sheet_name}: {str(e)}")
        return pd.DataFrame()

def filter_dataframe_by_brand(df, brand_filter, brand_column_index, keep_headers=True):
    """–§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å DataFrame –ø–æ –±—Ä–µ–Ω–¥—É - –Ω–∞–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ —á–µ–º —Ä–∞–±–æ—Ç–∞ —Å Excel —Ñ–∞–π–ª–æ–º"""
    try:
        if df.empty or not brand_filter or brand_column_index is None:
            return df
        
        # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–¥–ª—è —à–∞–±–ª–æ–Ω–∞)
        if keep_headers and len(df) > 4:
            header_rows = df.iloc[:4].copy()  # –ü–µ—Ä–≤—ã–µ 4 —Å—Ç—Ä–æ–∫–∏ - –∑–∞–≥–æ–ª–æ–≤–∫–∏
            data_rows = df.iloc[4:].copy()    # –û—Å—Ç–∞–ª—å–Ω—ã–µ - –¥–∞–Ω–Ω—ã–µ
            
            # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ
            if brand_column_index < len(data_rows.columns):
                brand_mask = data_rows.iloc[:, brand_column_index].astype(str).str.contains(
                    brand_filter, case=False, na=False
                )
                filtered_data = data_rows[brand_mask]
                
                # –û–±—ä–µ–¥–∏–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                return pd.concat([header_rows, filtered_data], ignore_index=True)
            else:
                return header_rows  # –ï—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        else:
            # –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ - —Ñ–∏–ª—å—Ç—Ä—É–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏
            if brand_column_index < len(df.columns):
                brand_mask = df.iloc[:, brand_column_index].astype(str).str.contains(
                    brand_filter, case=False, na=False
                )
                return df[brand_mask]
            else:
                return pd.DataFrame()  # –ï—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π DataFrame
                
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ DataFrame: {str(e)}")
        return df  # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

def get_template_article_values(template_bytes):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –∫–æ–ª–æ–Ω–∫–∏ '–ê—Ä—Ç–∏–∫—É–ª*' –ª–∏—Å—Ç–∞ '–®–∞–±–ª–æ–Ω' (—Å—Ç—Ä–æ–∫–∞ 2)"""
    try:
        with tempfile.NamedTemporaryFile(suffix='.xlsx', delete=False) as tmp_file:
            tmp_file.write(template_bytes)
            tmp_file.flush()
            
            # –ß–∏—Ç–∞–µ–º –≤–µ—Å—å –ª–∏—Å—Ç "–®–∞–±–ª–æ–Ω"
            df = pd.read_excel(tmp_file.name, sheet_name="–®–∞–±–ª–æ–Ω", header=None)
            os.unlink(tmp_file.name)
            
            if len(df) < 2:
                return set()
            
            # –ò—â–µ–º –∫–æ–ª–æ–Ω–∫—É "–ê—Ä—Ç–∏–∫—É–ª*" –≤–æ 2-–π —Å—Ç—Ä–æ–∫–µ (–∏–Ω–¥–µ–∫—Å 1)
            article_column_index = None
            for col in df.columns:
                if col < len(df.columns):
                    cell_value = str(df.iloc[1, col]) if not pd.isna(df.iloc[1, col]) else ""
                    if "–ê—Ä—Ç–∏–∫—É–ª" in cell_value and "*" in cell_value:
                        article_column_index = col
                        break
            
            if article_column_index is None:
                return set()
            
            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —ç—Ç–æ–π –∫–æ–ª–æ–Ω–∫–∏, –Ω–∞—á–∏–Ω–∞—è —Å 3-–π —Å—Ç—Ä–æ–∫–∏ (–∏–Ω–¥–µ–∫—Å 2)
            article_values = set()
            for row_idx in range(2, len(df)):
                if article_column_index < len(df.columns):
                    cell_value = df.iloc[row_idx, article_column_index]
                    if not pd.isna(cell_value):
                        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É –∏ –æ—á–∏—â–∞–µ–º
                        article_value = str(cell_value).strip()
                        if article_value and article_value != "":
                            article_values.add(article_value)
            
            return article_values
            
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –∏–∑ —à–∞–±–ª–æ–Ω–∞: {str(e)}")
        return set()

def filter_dataframe_by_template_articles(df, template_articles, sheet_name):
    """–§–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å DataFrame –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º –∏–∑ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –ª–∏—Å—Ç–æ–≤ '–û–∑–æ–Ω.–í–∏–¥–µ–æ' –∏ '–û–∑–æ–Ω.–í–∏–¥–µ–æ–æ–±–ª–æ–∂–∫–∞'"""
    try:
        if df.empty or not template_articles:
            return df
        
        # –ò—â–µ–º –∫–æ–ª–æ–Ω–∫—É "–ê—Ä—Ç–∏–∫—É–ª*" –≤–æ 2-–π —Å—Ç—Ä–æ–∫–µ (–∏–Ω–¥–µ–∫—Å 1)
        article_column_index = None
        if len(df) >= 2:
            for col in df.columns:
                if col < len(df.columns):
                    cell_value = str(df.iloc[1, col]) if not pd.isna(df.iloc[1, col]) else ""
                    if "–ê—Ä—Ç–∏–∫—É–ª" in cell_value and "*" in cell_value:
                        article_column_index = col
                        break
        
        if article_column_index is None:
            # –ï—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–ø–µ—Ä–≤—ã–µ 2 —Å—Ç—Ä–æ–∫–∏)
            return df.iloc[:2] if len(df) >= 2 else df
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–ø–µ—Ä–≤—ã–µ 2 —Å—Ç—Ä–æ–∫–∏)
        if len(df) <= 2:
            return df
        
        header_rows = df.iloc[:2].copy()
        data_rows = df.iloc[2:].copy()
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º –∏–∑ —à–∞–±–ª–æ–Ω–∞
        filtered_data_list = []
        for row_idx in range(len(data_rows)):
            if article_column_index < len(data_rows.columns):
                cell_value = data_rows.iloc[row_idx, article_column_index]
                if not pd.isna(cell_value):
                    article_value = str(cell_value).strip()
                    if article_value in template_articles:
                        filtered_data_list.append(data_rows.iloc[row_idx:row_idx+1])
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        if filtered_data_list:
            filtered_data = pd.concat(filtered_data_list, ignore_index=False)
            return pd.concat([header_rows, filtered_data], ignore_index=True)
        else:
            # –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–∞—é—â–∏—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
            return header_rows
            
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ DataFrame –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –ª–∏—Å—Ç–∞ '{sheet_name}': {str(e)}")
        return df  # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

def read_and_filter_excel_sheet(file_bytes, sheet_name, start_row=0, brand_filter=None, brand_column_index=None):
    """–ü—Ä–æ—á–∏—Ç–∞—Ç—å –∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ª–∏—Å—Ç Excel –∑–∞ –æ–¥–Ω—É –æ–ø–µ—Ä–∞—Ü–∏—é"""
    try:
        with tempfile.NamedTemporaryFile(suffix='.xlsx', delete=False) as tmp_file:
            tmp_file.write(file_bytes)
            tmp_file.flush()
            
            # –ß–∏—Ç–∞–µ–º –≤–µ—Å—å –ª–∏—Å—Ç
            df = pd.read_excel(tmp_file.name, sheet_name=sheet_name, header=None)
            os.unlink(tmp_file.name)
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –î–û –æ–±—Ä–µ–∑–∫–∏ –ø–æ start_row
            if brand_filter and brand_column_index is not None:
                df = filter_dataframe_by_brand(df, brand_filter, brand_column_index, keep_headers=False)
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º start_row –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            if start_row > 0 and len(df) > start_row:
                df = df.iloc[start_row:]
            
            return df
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ª–∏—Å—Ç–∞ {sheet_name}: {str(e)}")
        return pd.DataFrame()

def check_brand_column_exists(file_bytes, sheet_name="–®–∞–±–ª–æ–Ω"):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ '–ë—Ä–µ–Ω–¥ –≤ –æ–¥–µ–∂–¥–µ –∏ –æ–±—É–≤–∏*' –≤–æ 2-–π —Å—Ç—Ä–æ–∫–µ –ª–∏—Å—Ç–∞"""
    try:
        with tempfile.NamedTemporaryFile(suffix='.xlsx', delete=False) as tmp_file:
            tmp_file.write(file_bytes)
            tmp_file.flush()
            
            # –ß–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ 2-—é —Å—Ç—Ä–æ–∫—É (–∏–Ω–¥–µ–∫—Å 1)
            df = pd.read_excel(tmp_file.name, sheet_name=sheet_name, header=None, skiprows=1, nrows=1)
            os.unlink(tmp_file.name)
            
            # –ò—â–µ–º —Å—Ç–æ–ª–±–µ—Ü —Å —Ç–µ–∫—Å—Ç–æ–º "–ë—Ä–µ–Ω–¥ –≤ –æ–¥–µ–∂–¥–µ –∏ –æ–±—É–≤–∏*"
            for col in df.columns:
                cell_value = str(df.iloc[0, col]) if not pd.isna(df.iloc[0, col]) else ""
                if "–ë—Ä–µ–Ω–¥ –≤ –æ–¥–µ–∂–¥–µ –∏ –æ–±—É–≤–∏" in cell_value:
                    return True, col  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω–¥–µ–∫—Å –∫–æ–ª–æ–Ω–∫–∏
            return False, None
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–ª–æ–Ω–∫–∏ –±—Ä–µ–Ω–¥–∞: {str(e)}")
        return False, None


def merge_excel_files(template_bytes, additional_files_bytes, sheet_config, brand_filter=None, progress_callback=None):
    """–û–±—ä–µ–¥–∏–Ω–∏—Ç—å Excel —Ñ–∞–π–ª—ã —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –±—Ä–µ–Ω–¥—É –∏ –∞—Ä—Ç–∏–∫—É–ª–∞–º (—Å–Ω–∞—á–∞–ª–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è, –ø–æ—Ç–æ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ)"""
    tmp_template = None
    try:
        if progress_callback:
            progress_callback(0.05, "üîç –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏...")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –±—Ä–µ–Ω–¥–∞ –∑–∞—Ä–∞–Ω–µ–µ
        brand_column_index = None
        has_brand_column = False
        
        if brand_filter and "–®–∞–±–ª–æ–Ω" in [name for name, config in sheet_config.items() if config['merge']]:
            if progress_callback:
                progress_callback(0.1, "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–ª–æ–Ω–∫–∏ –±—Ä–µ–Ω–¥–∞...")
            
            has_brand_column, brand_column_index = check_brand_column_exists(template_bytes, "–®–∞–±–ª–æ–Ω")
            
            if has_brand_column:
                if progress_callback:
                    progress_callback(0.12, f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ –±—Ä–µ–Ω–¥–∞ (–ø–æ–∑–∏—Ü–∏—è {brand_column_index + 1}). –ë—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è")
            else:
                if progress_callback:
                    progress_callback(0.12, "‚ö†Ô∏è –ö–æ–ª–æ–Ω–∫–∞ –±—Ä–µ–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞")
                brand_filter = None  # –û—Ç–∫–ª—é—á–∞–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
        
        # –ü–æ–ª—É—á–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª—ã –∏–∑ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ-–ª–∏—Å—Ç–æ–≤
        template_articles = set()
        video_sheets = ["–û–∑–æ–Ω.–í–∏–¥–µ–æ", "–û–∑–æ–Ω.–í–∏–¥–µ–æ–æ–±–ª–æ–∂–∫–∞"]
        video_sheets_to_process = [name for name, config in sheet_config.items() if config['merge'] and name in video_sheets]
        
        if video_sheets_to_process:
            if progress_callback:
                progress_callback(0.13, "üîç –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –∏–∑ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ-–ª–∏—Å—Ç–æ–≤...")
            
            template_articles = get_template_article_values(template_bytes)
            
            if template_articles:
                if progress_callback:
                    progress_callback(0.14, f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(template_articles)} –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –≤ —à–∞–±–ª–æ–Ω–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏")
            else:
                if progress_callback:
                    progress_callback(0.14, "‚ö†Ô∏è –ê—Ä—Ç–∏–∫—É–ª—ã –≤ —à–∞–±–ª–æ–Ω–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ-–ª–∏—Å—Ç–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω–∞")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        merge_sheets = [name for name, config in sheet_config.items() if config['merge']]
        total_operations = len(merge_sheets) * (len(additional_files_bytes) + 2)
        current_operation = 0
        
        def update_progress(message):
            nonlocal current_operation
            current_operation += 1
            if progress_callback:
                progress_callback(0.15 + (current_operation / total_operations) * 0.8, message)
        
        update_progress("üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–∞-—à–∞–±–ª–æ–Ω–∞...")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        try:
            tmp_template = tempfile.NamedTemporaryFile(suffix='.xlsx', delete=False, mode='wb')
            tmp_template.write(template_bytes)
            tmp_template.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–ª—Å—è
            if not os.path.exists(tmp_template.name):
                raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —à–∞–±–ª–æ–Ω–∞")
            
            template_wb = load_workbook(tmp_template.name)
            
        except Exception as e:
            raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏/–∑–∞–≥—Ä—É–∑–∫–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {str(e)}")
        
        # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ª–∏—Å—Ç–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        for sheet_idx, (sheet_name, config) in enumerate(sheet_config.items()):
            if config['merge'] and sheet_name in template_wb.sheetnames:
                start_row = config['start_row']
                
                update_progress(f"üìã –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏—Å—Ç–∞ '{sheet_name}'...")
                
                try:
                    # –ß–∏—Ç–∞–µ–º –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –ª–∏—Å—Ç —à–∞–±–ª–æ–Ω–∞
                    if sheet_name == "–®–∞–±–ª–æ–Ω" and brand_filter and has_brand_column:
                        update_progress(f"üéØ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–∞ –ø–æ –±—Ä–µ–Ω–¥—É '{brand_filter}'...")
                        template_df = pd.read_excel(tmp_template.name, sheet_name=sheet_name, header=None)
                        template_df = filter_dataframe_by_brand(template_df, brand_filter, brand_column_index, keep_headers=True)
                        
                        original_rows = len(pd.read_excel(tmp_template.name, sheet_name=sheet_name, header=None))
                        filtered_rows = len(template_df)
                        if progress_callback:
                            progress_callback(
                                0.15 + (current_operation / total_operations) * 0.8,
                                f"üìä –®–∞–±–ª–æ–Ω –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω: {filtered_rows}/{original_rows} —Å—Ç—Ä–æ–∫ —Å –±—Ä–µ–Ω–¥–æ–º '{brand_filter}'"
                            )
                    elif sheet_name in ["–û–∑–æ–Ω.–í–∏–¥–µ–æ", "–û–∑–æ–Ω.–í–∏–¥–µ–æ–æ–±–ª–æ–∂–∫–∞"] and template_articles:
                        update_progress(f"üé¨ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–∞ '{sheet_name}' –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º...")
                        template_df = pd.read_excel(tmp_template.name, sheet_name=sheet_name, header=None)
                        original_rows = len(template_df)
                        template_df = filter_dataframe_by_template_articles(template_df, template_articles, sheet_name)
                        filtered_rows = len(template_df)
                        if progress_callback:
                            progress_callback(
                                0.15 + (current_operation / total_operations) * 0.8,
                                f"üé¨ –®–∞–±–ª–æ–Ω '{sheet_name}' –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω: {filtered_rows}/{original_rows} —Å—Ç—Ä–æ–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º"
                            )
                    else:
                        template_df = pd.read_excel(tmp_template.name, sheet_name=sheet_name, header=None)
                    
                    # –°–æ–±–∏—Ä–∞–µ–º –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
                    additional_data = []
                    for file_idx, add_file_bytes in enumerate(additional_files_bytes):
                        if sheet_name == "–®–∞–±–ª–æ–Ω" and brand_filter and has_brand_column:
                            update_progress(f"üéØ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞ {file_idx + 1}/{len(additional_files_bytes)} –ø–æ –±—Ä–µ–Ω–¥—É '{brand_filter}'...")
                            
                            add_df = read_and_filter_excel_sheet(
                                add_file_bytes, sheet_name, start_row, brand_filter, brand_column_index
                            )
                            
                            if not add_df.empty:
                                additional_data.append(add_df)
                                if progress_callback:
                                    progress_callback(
                                        0.15 + (current_operation / total_operations) * 0.8,
                                        f"‚úÖ –§–∞–π–ª {file_idx + 1}: –Ω–∞–π–¥–µ–Ω–æ {len(add_df)} —Å—Ç—Ä–æ–∫ —Å –±—Ä–µ–Ω–¥–æ–º '{brand_filter}'"
                                    )
                        else:
                            update_progress(f"üìÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞ {file_idx + 1}/{len(additional_files_bytes)} –¥–ª—è –ª–∏—Å—Ç–∞ '{sheet_name}'...")
                            
                            try:
                                add_df = read_excel_sheet(add_file_bytes, sheet_name, start_row)
                                
                                # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º –¥–ª—è –≤–∏–¥–µ–æ-–ª–∏—Å—Ç–æ–≤
                                if sheet_name in ["–û–∑–æ–Ω.–í–∏–¥–µ–æ", "–û–∑–æ–Ω.–í–∏–¥–µ–æ–æ–±–ª–æ–∂–∫–∞"]:
                                    if template_articles:
                                        original_rows = len(add_df)
                                        add_df = filter_dataframe_by_template_articles(add_df, template_articles, sheet_name)
                                        filtered_rows = len(add_df)
                                        if progress_callback:
                                            progress_callback(
                                                0.15 + (current_operation / total_operations) * 0.8,
                                                f"üé¨ –§–∞–π–ª {file_idx + 1}: –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ {filtered_rows}/{original_rows} —Å—Ç—Ä–æ–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º"
                                            )

                                if not add_df.empty:
                                    additional_data.append(add_df)
                            except Exception as e:
                                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª—ã —Å –æ—à–∏–±–∫–∞–º–∏, –Ω–æ –ª–æ–≥–∏—Ä—É–µ–º
                                if progress_callback:
                                    progress_callback(
                                        0.15 + (current_operation / total_operations) * 0.8,
                                        f"‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Ñ–∞–π–ª–∞ {file_idx + 1} (–æ—à–∏–±–∫–∞): {str(e)[:50]}..."
                                    )
                    
                    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —É–∂–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                    if additional_data:
                        update_progress(f"üîó –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ª–∏—Å—Ç–∞ '{sheet_name}'...")
                        combined_df = pd.concat([template_df] + additional_data, ignore_index=True)
                        
                        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ –ª–∏—Å—Ç
                        ws = template_wb[sheet_name]
                        ws.delete_rows(1, ws.max_row)
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–ø–∏—Å–∏ –¥–ª—è –±–æ–ª—å—à–∏—Ö –ª–∏—Å—Ç–æ–≤
                        total_rows = len(combined_df)
                        for r_idx, row in enumerate(dataframe_to_rows(combined_df, index=False, header=False)):
                            for c_idx, value in enumerate(row):
                                ws.cell(row=r_idx + 1, column=c_idx + 1, value=value)
                            
                            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 1000 —Å—Ç—Ä–æ–∫ (–¥–ª—è –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ —á–∞—â–µ)
                            if total_rows > 1000 and r_idx % 1000 == 0 and progress_callback:
                                write_progress = (r_idx / total_rows) * 0.05  # 5% –æ—Ç –æ–±—â–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –Ω–∞ –∑–∞–ø–∏—Å—å
                                progress_callback(
                                    0.15 + ((current_operation + write_progress) / total_operations) * 0.8,
                                    f"‚úèÔ∏è –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö: {r_idx + 1}/{total_rows} —Å—Ç—Ä–æ–∫ –≤ –ª–∏—Å—Ç '{sheet_name}'"
                                )
                        
                        if progress_callback:
                            final_message = f"‚úÖ –õ–∏—Å—Ç '{sheet_name}' –æ–±—Ä–∞–±–æ—Ç–∞–Ω ({total_rows} —Å—Ç—Ä–æ–∫"
                            if sheet_name == "–®–∞–±–ª–æ–Ω" and brand_filter and has_brand_column:
                                final_message += f", –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω –ø–æ –±—Ä–µ–Ω–¥—É '{brand_filter}'"
                            final_message += ")"
                            
                            progress_callback(
                                0.15 + (current_operation / total_operations) * 0.8,
                                final_message
                            )
                    else:
                        # –ï—Å–ª–∏ –Ω–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–æ—Å—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —à–∞–±–ª–æ–Ω
                        ws = template_wb[sheet_name]
                        ws.delete_rows(1, ws.max_row)
                        
                        for r_idx, row in enumerate(dataframe_to_rows(template_df, index=False, header=False)):
                            for c_idx, value in enumerate(row):
                                ws.cell(row=r_idx + 1, column=c_idx + 1, value=value)
                
                except Exception as e:
                    # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ª–∏—Å—Ç–∞, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
                    if progress_callback:
                        progress_callback(
                            0.15 + (current_operation / total_operations) * 0.8,
                            f"‚ùå –û—à–∏–±–∫–∞ –ª–∏—Å—Ç–∞ '{sheet_name}': {str(e)[:50]}..."
                        )
        
        if progress_callback:
            progress_callback(0.98, "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞...")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        output = BytesIO()
        template_wb.save(output)
        output.seek(0)
        
        template_wb.close()
        
        if progress_callback:
            progress_callback(1.0, "‚úÖ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
        return output.getvalue()
        
    except Exception as e:
        error_msg = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤: {str(e)}"
        if progress_callback:
            progress_callback(0, f"‚ùå {error_msg}")
        raise Exception(error_msg)
        
    finally:
        # –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        if tmp_template and hasattr(tmp_template, 'name') and os.path.exists(tmp_template.name):
            try:
                os.unlink(tmp_template.name)
            except Exception:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –≤ –æ–±–ª–∞—á–Ω–æ–π —Å—Ä–µ–¥–µ

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
col1, col2 = st.columns([1, 1])

with col1:
    st.subheader("üìÑ –®–∞–±–ª–æ–Ω —Ñ–∞–π–ª–∞")
    st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–ª—É–∂–∏—Ç—å —à–∞–±–ª–æ–Ω–æ–º")
    
    template_upload = st.file_uploader(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª-—à–∞–±–ª–æ–Ω",
        type=['xlsx'],
        key="template_uploader"
    )
    
    if template_upload is not None:
        st.session_state.template_file = template_upload.getvalue()
        st.session_state.available_sheets = get_excel_sheets(st.session_state.template_file)
        st.success(f"‚úÖ –®–∞–±–ª–æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω: {template_upload.name}")
        
        if st.session_state.available_sheets:
            st.info(f"üóÇÔ∏è –ù–∞–π–¥–µ–Ω–æ –ª–∏—Å—Ç–æ–≤: {', '.join(st.session_state.available_sheets)}")

with col2:
    st.subheader("üìÅ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã")
    st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã, –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫ —à–∞–±–ª–æ–Ω—É")
    
    additional_uploads = st.file_uploader(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã",
        type=['xlsx'],
        accept_multiple_files=True,
        key="additional_uploader"
    )
    
    if additional_uploads:
        st.session_state.additional_files = [f.getvalue() for f in additional_uploads]
        st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(additional_uploads)}")
        for i, f in enumerate(additional_uploads):
            st.info(f"üìÑ {i+1}. {f.name}")

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –±—Ä–µ–Ω–¥—É
if st.session_state.template_file and "–®–∞–±–ª–æ–Ω" in st.session_state.available_sheets:
    st.subheader("üéØ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –±—Ä–µ–Ω–¥—É")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –±—Ä–µ–Ω–¥–∞
    has_brand_column, brand_column_index = check_brand_column_exists(st.session_state.template_file, "–®–∞–±–ª–æ–Ω")
    
    if has_brand_column:
        st.success(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ '–ë—Ä–µ–Ω–¥ –≤ –æ–¥–µ–∂–¥–µ –∏ –æ–±—É–≤–∏*' (–ø–æ–∑–∏—Ü–∏—è {brand_column_index + 1})")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –±—Ä–µ–Ω–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        default_brand = get_data_filter("oz_category_products_brands")
        if default_brand and ";" in default_brand:
            # –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –±—Ä–µ–Ω–¥–æ–≤ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã —Ç–æ—á–∫–æ–π —Å –∑–∞–ø—è—Ç–æ–π, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π
            default_brand = default_brand.split(";")[0].strip()
        
        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –±—Ä–µ–Ω–¥–∞
        col1, col2 = st.columns([2, 1])
        
        with col1:
            brand_input = st.text_input(
                "–í–≤–µ–¥–∏—Ç–µ –±—Ä–µ–Ω–¥ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏",
                value=default_brand if default_brand else "",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Shuzzi, Nike, Adidas...",
                help="–ë—É–¥—É—Ç –æ—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –±—Ä–µ–Ω–¥–æ–º. –ü–æ–∏—Å–∫ –Ω–µ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É."
            )
        
        with col2:
            use_brand_filter = st.checkbox(
                "–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä",
                value=bool(brand_input),
                help="–í–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ –±—Ä–µ–Ω–¥—É"
            )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        st.session_state.brand_filter_enabled = use_brand_filter and bool(brand_input)
        st.session_state.brand_filter_value = brand_input if use_brand_filter else ""
        
        if st.session_state.brand_filter_enabled:
            st.info(f"üéØ –ê–∫—Ç–∏–≤–µ–Ω —Ñ–∏–ª—å—Ç—Ä –ø–æ –±—Ä–µ–Ω–¥—É: **{st.session_state.brand_filter_value}**")
            st.warning("‚ö†Ô∏è –ü–æ—Å–ª–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –±—Ä–µ–Ω–¥–æ–º")
        else:
            st.info("üîì –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ - –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤—Å–µ —Å—Ç—Ä–æ–∫–∏")
    else:
        st.info("‚ÑπÔ∏è –ö–æ–ª–æ–Ω–∫–∞ '–ë—Ä–µ–Ω–¥ –≤ –æ–¥–µ–∂–¥–µ –∏ –æ–±—É–≤–∏*' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ª–∏—Å—Ç–µ '–®–∞–±–ª–æ–Ω' - —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        st.session_state.brand_filter_enabled = False
        st.session_state.brand_filter_value = ""

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
if st.session_state.template_file and st.session_state.available_sheets:
    st.subheader("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è")
    st.markdown("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–∏–µ –ª–∏—Å—Ç—ã –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –∏ —Å –∫–∞–∫–æ–π —Å—Ç—Ä–æ–∫–∏ –±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")
    
    config_cols = st.columns(3)
    
    with config_cols[0]:
        st.markdown("**–õ–∏—Å—Ç**")
    with config_cols[1]:
        st.markdown("**–û–±—ä–µ–¥–∏–Ω—è—Ç—å**")
    with config_cols[2]:
        st.markdown("**–ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞**")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ª–∏—Å—Ç–∞
    for sheet in st.session_state.available_sheets:
        config_cols = st.columns(3)
        
        with config_cols[0]:
            st.write(sheet)
        
        with config_cols[1]:
            merge_checkbox = st.checkbox(
                "–û–±—ä–µ–¥–∏–Ω–∏—Ç—å",
                key=f"merge_{sheet}",
                value=sheet in ["–®–∞–±–ª–æ–Ω", "–û–∑–æ–Ω.–í–∏–¥–µ–æ", "–û–∑–æ–Ω.–í–∏–¥–µ–æ–æ–±–ª–æ–∂–∫–∞"]
            )
        
        with config_cols[2]:
            start_row = st.number_input(
                "–°—Ç—Ä–æ–∫–∞",
                min_value=0,
                max_value=100,
                value=5 if merge_checkbox else 0,
                key=f"start_row_{sheet}",
                disabled=not merge_checkbox
            )
        
        st.session_state.sheet_config[sheet] = {
            'merge': merge_checkbox,
            'start_row': start_row
        }

# –ö–Ω–æ–ø–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
if st.session_state.template_file and st.session_state.additional_files and st.session_state.sheet_config:
    st.subheader("üöÄ –í—ã–ø–æ–ª–Ω–∏—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—É–¥–µ—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–æ
    merge_sheets = [sheet for sheet, config in st.session_state.sheet_config.items() if config['merge']]
    if merge_sheets:
        st.info(f"üìã –ë—É–¥—É—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã –ª–∏—Å—Ç—ã: {', '.join(merge_sheets)}")
        
        col1, col2, col3 = st.columns([1, 2, 1])
        with col2:
            # –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –±–µ–∑ —Ñ–ª–∞–≥–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
            if st.button("üîó –û–±—ä–µ–¥–∏–Ω–∏—Ç—å —Ñ–∞–π–ª—ã", type="primary", use_container_width=True):
                # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
                progress_container = st.container()
                
                with progress_container:
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                    merge_sheets_count = len([s for s, c in st.session_state.sheet_config.items() if c['merge']])
                    additional_files_count = len(st.session_state.additional_files)
                    
                    st.info(f"üîÑ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ: {merge_sheets_count} –ª–∏—Å—Ç–æ–≤ √ó {additional_files_count + 1} —Ñ–∞–π–ª–æ–≤")
                    st.warning("‚ö†Ô∏è –ù–µ –∑–∞–∫—Ä—ã–≤–∞–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞!")
                    
                    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
                    progress_bar = st.progress(0)
                    progress_text = st.empty()
                    
                    # Callback —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                    def update_progress(value, message):
                        progress_bar.progress(min(value, 1.0))
                        progress_text.text(message)
                    
                    try:
                        # –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –±—Ä–µ–Ω–¥—É
                        brand_filter = st.session_state.brand_filter_value if st.session_state.brand_filter_enabled else None
                        
                        result_bytes = merge_excel_files(
                            st.session_state.template_file,
                            st.session_state.additional_files,
                            st.session_state.sheet_config,
                            brand_filter=brand_filter,
                            progress_callback=update_progress
                        )
                        
                        if result_bytes:
                            # –û—á–∏—â–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
                            progress_bar.empty()
                            progress_text.empty()
                            st.success("‚úÖ –§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã!")
                            
                            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
                            total_size_mb = len(result_bytes) / (1024 * 1024)
                            st.info(f"üìä –†–∞–∑–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞: {total_size_mb:.2f} MB")
                            
                            # –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                            st.download_button(
                                label="üì• –°–∫–∞—á–∞—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª",
                                data=result_bytes,
                                file_name="merged_file.xlsx",
                                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                                use_container_width=True
                            )
                        else:
                            progress_bar.empty()
                            progress_text.empty()
                            st.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤")
                            
                    except Exception as e:
                        progress_bar.empty()
                        progress_text.empty()
                        st.error(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
                        st.error("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É–º–µ–Ω—å—à–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤ –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤")
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –æ—à–∏–±–∫—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                        with st.expander("üîç –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏"):
                            st.code(traceback.format_exc())
    else:
        st.warning("‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ª–∏—Å—Ç –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è")

# –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
with st.expander("‚ÑπÔ∏è –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç"):
    st.markdown("""
    ### üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:
    
    1. **–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª-—à–∞–±–ª–æ–Ω** - —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞
    2. **–ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã** - —Ñ–∞–π–ª—ã, –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å
    3. **üéØ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ –±—Ä–µ–Ω–¥—É** (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞):
       - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ "–ë—Ä–µ–Ω–¥ –≤ –æ–¥–µ–∂–¥–µ –∏ –æ–±—É–≤–∏*"
       - –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –±—Ä–µ–Ω–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
       - –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –±—Ä–µ–Ω–¥ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    4. **–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ**:
       - –í—ã–±–µ—Ä–∏—Ç–µ –ª–∏—Å—Ç—ã –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
       - –£–∫–∞–∂–∏—Ç–µ —Å –∫–∞–∫–æ–π —Å—Ç—Ä–æ–∫–∏ –±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    5. **–í—ã–ø–æ–ª–Ω–∏—Ç–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ** –∏ —Å–∫–∞—á–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    
    ### üñ•Ô∏è –°–µ—Ä–≤–µ—Ä–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞:
    
    - **üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å**: –í—Å–µ —Ñ–∞–π–ª—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    - **‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å**: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–µ—Å—É—Ä—Å—ã —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    - **üìä –ü—Ä–æ–≥—Ä–µ—Å—Å**: –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∂–¥—ã–π —ç—Ç–∞–ø –æ–±—Ä–∞–±–æ—Ç–∫–∏
    - **üíæ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    - **üìà –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å**: –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
    
    ### üîß –ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã (–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô):
    
    - **–ù–µ–æ–±—ä–µ–¥–∏–Ω—è–µ–º—ã–µ –ª–∏—Å—Ç—ã** –æ—Å—Ç–∞—é—Ç—Å—è –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —à–∞–±–ª–æ–Ω–µ
    - **–û–±—ä–µ–¥–∏–Ω—è–µ–º—ã–µ –ª–∏—Å—Ç—ã** —Å–æ—Ö—Ä–∞–Ω—è—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —à–∞–±–ª–æ–Ω–∞, –Ω–æ –∫ –Ω–∏–º –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    - **–ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞** –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å –∫–∞–∫–æ–π —Å—Ç—Ä–æ–∫–∏ –±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ (—á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏)
    - **üéØ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –±—Ä–µ–Ω–¥—É** (–†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–ô –ü–û–î–•–û–î):
      - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–∫–∏ "–ë—Ä–µ–Ω–¥ –≤ –æ–¥–µ–∂–¥–µ –∏ –æ–±—É–≤–∏*" –≤–æ 2-–π —Å—Ç—Ä–æ–∫–µ –ª–∏—Å—Ç–∞ "–®–∞–±–ª–æ–Ω"
      - **–°–ù–ê–ß–ê–õ–ê —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è**: –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ –î–û –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
      - **–ü–û–¢–û–ú –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ**: –æ–±—ä–µ–¥–∏–Ω—è—é—Ç—Å—è —É–∂–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
      - **–†–µ–∑—É–ª—å—Ç–∞—Ç**: –≤ 10-50 —Ä–∞–∑ –±—ã—Å—Ç—Ä–µ–µ —Å—Ç–∞—Ä–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞!
      - –†–∞–±–æ—Ç–∞ —Å DataFrame –≤–º–µ—Å—Ç–æ Excel —Ñ–∞–π–ª–æ–≤ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
    - **–ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä** –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: –ø—Ä–æ–≤–µ—Ä–∫—É –±—Ä–µ–Ω–¥–∞, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ, –∑–∞–ø–∏—Å—å, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    
    ### üí° –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞ (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º):
    
    ```
    üîç –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏...     [5%]
    üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–ª–æ–Ω–∫–∏ –±—Ä–µ–Ω–¥–∞...               [10%]
    ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ –±—Ä–µ–Ω–¥–∞ (–ø–æ–∑–∏—Ü–∏—è 5)...            [12%]
    üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–∞-—à–∞–±–ª–æ–Ω–∞...           [15%]
    üéØ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–∞...            [20%]
    üìä –®–∞–±–ª–æ–Ω –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω: 1250/5000 —Å—Ç—Ä–æ–∫...          [25%]
    üéØ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞ 1/3 –ø–æ –±—Ä–µ–Ω–¥—É 'Shuzzi'...      [35%]
    ‚úÖ –§–∞–π–ª 1: –Ω–∞–π–¥–µ–Ω–æ 890 —Å—Ç—Ä–æ–∫ —Å –±—Ä–µ–Ω–¥–æ–º...           [40%]
    üéØ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞ 2/3 –ø–æ –±—Ä–µ–Ω–¥—É 'Shuzzi'...      [50%]
    ‚úÖ –§–∞–π–ª 2: –Ω–∞–π–¥–µ–Ω–æ 1120 —Å—Ç—Ä–æ–∫ —Å –±—Ä–µ–Ω–¥–æ–º...          [55%]
    üîó –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...             [70%]
    ‚úèÔ∏è –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö: 2000/3260 —Å—Ç—Ä–æ–∫...                [85%]
    üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞...               [98%]
    ‚úÖ –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!                           [100%]
    ```
    
    ### üéØ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–ê–Ø –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:
    
    - **–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è**: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ö–ê–ñ–î–û–ì–û —Ñ–∞–π–ª–∞ –î–û –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è (–≤ 10-50 —Ä–∞–∑ –±—ã—Å—Ç—Ä–µ–µ!)
    - **DataFrame –≤–º–µ—Å—Ç–æ Excel**: –†–∞–±–æ—Ç–∞ —Å pandas DataFrame –≤–º–µ—Å—Ç–æ openpyxl –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    - **–ü–æ—Ç–æ–∫–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞**: –î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ø–æ—ç—Ç–∞–ø–Ω–æ
    - **–£–º–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å**: –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
    - **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç—å—é**: –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ RAM
    - **–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å**: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å –º–∏–ª–ª–∏–æ–Ω–∞–º–∏ —Å—Ç—Ä–æ–∫ –∑–∞ –º–∏–Ω—É—Ç—ã, –∞ –Ω–µ —á–∞—Å—ã
    - **–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫**: –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º
    
    **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:**
    - **–°—Ç–∞—Ä—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º**: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ 10 —Ñ–∞–π–ª–æ–≤ –ø–æ 10–ö —Å—Ç—Ä–æ–∫ ‚Üí —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è 100–ö —Å—Ç—Ä–æ–∫ = ~5-15 –º–∏–Ω—É—Ç
    - **–ù–æ–≤—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º**: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è 10 —Ñ–∞–π–ª–æ–≤ –ø–æ 1–ö –Ω—É–∂–Ω—ã—Ö —Å—Ç—Ä–æ–∫ ‚Üí –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ 10–ö —Å—Ç—Ä–æ–∫ = ~30 —Å–µ–∫—É–Ω–¥
    """)

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —Å–∞–π–¥–±–∞—Ä–µ
with st.sidebar:
    st.subheader("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    
    if st.session_state.template_file:
        st.metric("üìÑ –®–∞–±–ª–æ–Ω", "–ó–∞–≥—Ä—É–∂–µ–Ω")
        st.metric("üóÇÔ∏è –õ–∏—Å—Ç–æ–≤ –≤ —à–∞–±–ª–æ–Ω–µ", len(st.session_state.available_sheets))
    else:
        st.metric("üìÑ –®–∞–±–ª–æ–Ω", "–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
    
    st.metric("üìÅ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤", len(st.session_state.additional_files))
    
    if st.session_state.sheet_config:
        merge_count = len([s for s, c in st.session_state.sheet_config.items() if c['merge']])
        st.metric("üîó –õ–∏—Å—Ç–æ–≤ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è", merge_count)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –±—Ä–µ–Ω–¥—É
    if hasattr(st.session_state, 'brand_filter_enabled'):
        if st.session_state.brand_filter_enabled:
            st.metric("üéØ –§–∏–ª—å—Ç—Ä –ø–æ –±—Ä–µ–Ω–¥—É", st.session_state.brand_filter_value)
        else:
            st.metric("üéØ –§–∏–ª—å—Ç—Ä –ø–æ –±—Ä–µ–Ω–¥—É", "–û—Ç–∫–ª—é—á–µ–Ω")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—é
    st.markdown("---")
    if (st.session_state.template_file and 
        st.session_state.additional_files and 
        st.session_state.sheet_config and
        any(config['merge'] for config in st.session_state.sheet_config.values())):
        st.success("‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—é")
    else:
        st.warning("‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
    
    # –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    with st.expander("üîß –°–∏—Å—Ç–µ–º–∞"):
        st.text(f"Streamlit: {st.__version__}")
        st.text(f"Platform: Cloud Server")
        
        # –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏ –≤ temp –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        try:
            test_file = tempfile.NamedTemporaryFile(delete=True)
            test_file.close()
            st.success("‚úÖ Temp —Ñ–∞–π–ª—ã: OK")
        except Exception as e:
            st.error(f"‚ùå Temp —Ñ–∞–π–ª—ã: {str(e)}") 